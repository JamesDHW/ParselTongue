############
# COMMANDS #
############
undo :: command
redo :: command
end block :: command
close block :: command
add indent :: command
indent :: command
replace X with X :: command
set X as X :: command
enter :: command
new line :: command
comment X :: command
##########
# LITERALS
##########
in :: in
and :: and
or :: or
not :: not
pass :: pass
continue :: continue
break :: break
return :: return
yield :: yield
def :: def
is :: is
true :: True
false :: False
equals :: =
is equal to :: ==
dot :: .
comma :: ,
semicolon :: ;
colon :: :
underscore :: _
open parenthesis :: (
close parenthesis :: )
open parentheses :: (
close parentheses :: )
open bracket :: [
close bracket :: ]
open brackets :: [
close brackets :: ]
open brace :: {
close brace :: }
open braces :: {
close braces :: }
quote :: "
speech mark :: "
open quote :: "
close quote :: "
start string :: "
close string :: "
begin string :: "
end string :: "
#################
# INTERMEDIATES #
#################
X then X :: X \nX
# X dot X :: X.X
# X comma X :: X, X
# X plus X :: X + X
N plus equals X :: N += X
# X add X :: X + X
# X minus X :: X - X
# X take X :: X - X
# X times X :: X * X
# X multiplied by X :: X * X
# X over X :: X / X
# X divided by X :: X / X
#####################
# VARIABLE STATEMENTS
#####################
N is V :: N = V
N equals X :: N = V
N is a list of X :: N = [ X ]
N equals true :: N = True
N equals false :: N = False
N is true :: N = True
N is false :: N = False
###############
# IF STATEMENTS
###############
if :: if <?>: \n \t
if else :: if <?>:\n \t<?>\n\belse:\n \t
if B :: if B:\n \t
if N :: if N:\n \t
if B X :: if B:\n \t X
if B then X :: if V :\n \t X
if N then X :: if N :\n \t X
if B then X else :: if X :\n \t X \n\belse: \n
if B then X else X :: if X :\n \t X \n\belse: \n X
else X :: \belse: \n \t X
elif B :: \belif X: \n \t
elif B then X :: \belif X: \n \t X
################
# FOR STATEMENTS
################
for N in X :: for N in X : \n \t
for N in X do X :: for N in X : \n \t X
for N in V X :: for N in V : \n \t X
for N in range len V X :: for N in range(len(V)) : \n \t X
##################
# WHILE STATEMENTS
##################
while B :: while B : \n \t
while B X :: while B : \n \tX
while N X :: while V : \n \t X
while N is true :: while X == True : \n \t
while N is false :: while X == False : \n \t
while N equals true :: while X == True : \n \t
while N equals false :: while X == False : \n \t
while N is true X :: while X == True : \n \tX
while N is false X :: while X == False : \n \tX
while N equals true X :: while X == True : \n \tX
while N equals false X :: while X == False : \n \tX
#while X V X :: while X V : \n \tX
while B do X :: while X : \n \t X
###########
# FUNCTIONS
###########
def N :: def N (<?>): \n \t
define function N :: def N (<?>): \n \t
define function N attributes X :: def N ( X ): \n \t
########
# PYTHON
########
range X :: range(X)
len N :: len(N)
print V :: print(V)
input :: input()
input S :: input(S)
input with prompt S :: input(S)
integer of X :: int(X)
string of X :: str(X)